1. Database
	- Set up server - Kevin Done
	- Determine how many tables to create - Richard Done
		- Ticket table
		- User Table
		- Working-Log Table
		- Region Table
	-Note: Geolocation Data Format - Kevin Done
		- figure out geolocation datatype/Format
			- Data from tower is in .csv format: Source: Error Msg, Module Id, Tower ID and Street Location, Date and Time, Latitude, Longitude
			- Latitude and Longitude are in Decimal degree format to 6 digits (four after decimal place)
		- figure out how to prepare sample location data - Richard Done
		- Output or Input
			- Can interact with csv file using python with csv library to process the raw csv input into more easily parsable tickets
2. Python Webapp server - Richard 
	- How to deploy restful service -  Done
	- How to connect to database - Done
	- How to develop application - Done
2.5. Practice SQL update, delete, select - Kevin Done
	- Online tutorial
	- Quick, Easy
2.6. Research Frontend Framework - Kevin Done
	- AngularJS
	- React
	- Look for GIS capability
2.7. Setup local python webapp server - Kevin Done
	- HTML
	- CSS
	- Javascript
3.1. Develop login app
	- make email address unique in database - Done
3.2. Develop ticket reciever Done
	- json format
3.3. Develop ticket app 
	- List tickets
		- Filter by user assigned ticket - Done
		- Add ticket to worklist - Done
		- Show 10 closest unassigned tickets - Done
		- Remove ticket from worklist -> Update Ticket Status
	- worklist - Done
	- View single ticket details - 
		- View single ticket comments+date of comments
		- Add dropdown to change ticket status
		- Add form to add comments
			- get date when comment is submitted via button/link
			- insert comment+date into ctt_ticket_details
	- Update ticket status	
	- 
	- completed tickets list
3a. Developing application 
	- How to recieve, parse and save ticket to database
	- How to login to Webapp
	- How to query ticket
		- Autoquery every ~1 min
		- Manual query available to End User
	- How to update ticket
	- How to Manually create ticket & upload to database
3b. Replace status number with string
	- Change status numbers to text - Done
	- Hide ticket Id -> change ticketid in to html comment - Done
	- Replace assigned user id to show user's name/id - Done I think
	- Hide assigned userid, updateddatetime, ticketstatus, assigned date in getclosesttickets page -Done
	- Change completeddatetime to last updated time - Done I think
	- Display ticket in map view - Google Maps API has fees
	- Move add comment to update status page - Done
	- Remove mark as complete column - Done
	- Add distance column in get closest tickets page - Done
	- Navigation Bar - Done
	- make global redirect to login page when no authenticationtoken - Done
	- after login go to worklist - Done
	- remove assign to myself button from tickets that are already assigned - Done
	- sort/organization for ticket page
4. Testing
	- Function Testing
	- Load Test
	- Distaster Recovery
		- Database Regular Backup
		- Explore local browser store
5. Prepare MVP version for Demo features
6. Prepare Beta Version